---
- name: restart sshd
  service:
    name: sshd
    state: restarted
  become: True
  listen: 'restart sshd'

- name: Cleanup temp moduli
  file:
    path: '{{ item }}'
    state: absent
  with_items:
    - "{{ ansible_env.HOME }}/moduli.in"
    - "{{ ansible_env.HOME }}/moduli.out"
  when: primes_are_copied.changed
  listen: 'cleanup moduli'

- name: restart ufw
  service:
    name: ufw
    state: restarted
  become: True
  listen: 'restart ufw'

- name: restart rsyncd
  service:
    name: rsync
    state: restarted
  become: True
  listen: 'restart rsyncd'

- name: reload sysctl
  shell: sysctl --system
  become: True
  listen: 'reload sysctl'

- name: restart timesyncd
  service:
    name: systemd-timesyncd
    state: restarted
  become: True
  listen: 'restart timesyncd'

- name: reconfigure keyboard settings
  shell: dpkg-reconfigure -f noninteractive keyboard-configuration
  become: True
  listen: 'dpkg_keyboard'

- name: restart sshguard
  service:
    name: sshguard
    state: restarted
  become: True
  listen: 'restart sshguard'

- name: Restart Knot
  service:
    name: kresd@1
    state: restarted
  become: True
  listen: 'restart kresd'

- name: Restart thermald
  service:
    name: thermald
    state: restarted
  become: True
  listen: 'restart thermald'

- name: Restart unattended-upgrades
  service:
    name: unattended-upgrades
    state: restarted
  become: True
  listen: 'restart unattended-upgrades'

- name: Update GRUB
  command: grub-mkconfig -o /boot/grub/grub.cfg && update-grub
  listen: 'grub_update'
  become: True
  notify: reboot host

- name: Rotate logs
  command: 'logrotate -f /etc/logrotate.conf'
  become: True
  listen: 'rotate logs'

- name: Reload systemd
  systemd:
    daemon_reexec: True
    daemon_reload: True
    state: restarted
    name: local-fs.target
  become: True
  listen: 'reload systemd'

- name: Reboot target host
  reboot:
    msg: 'Rebooting {{ ansible_hostname | upper }} @ {{ ansible_host }}'
    # Safety!
    connect_timeout: 2
    post_reboot_delay: 1
  become: True
  when: ansible_connection != "local" and base_allow_reboot
  listen: 'reboot host'

- name: Reload udev rules
  shell: udevadm control --reload-rules
  become: True
  listen: 'reload udev'
