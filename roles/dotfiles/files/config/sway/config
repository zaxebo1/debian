#
# Look ------------------------------------------------
#
default_border pixel 2
default_floating_border pixel 2
default_orientation auto

font pango:Terminus 16px
seat seat0 xcursor_theme Adwaita 24

gaps inner 12
hide_edge_borders --i3 smart
smart_borders on
smart_gaps on
title_align center
titlebar_border_thickness 0

# Set $DISPLAY
xwayland enable

# VRR
output * adaptive_sync on

# Screens
# output DP-3 scale 1.0
# output DP-3 pos 0 0 res 3840x2160
# output eDP-1 scale 1.0
# output eDP-1 pos 780 2160 res 1920x1080

# Disable internal screen output when the lid is closed
bindswitch --reload --locked lid:on output eDP-1 disable
bindswitch --reload --locked lid:off output eDP-1 enable

# class                 border  backgr. text    indicator child_border (try #425059)
client.focused          #2b2e30 #2b2e30 #888888 #3a3a3a   #425059
client.focused_inactive #2b2e30 #2b2e30 #888888 #1d1f21   #000000
client.unfocused        #222426 #222426 #444444 #1d1f21   #000000
client.urgent           #2f343a #900000 #ffffff #900000   #900000

# Per-application assignements
assign [app_id="keepassxc"] "5"
for_window [app_id="foot"] titlebar_padding 0 2
for_window [app_id="veracrypt"] floating enable
for_window [app_id="gtk3-widget-factory"] floating enable
for_window [app_id="wdisplays"] floating enable
for_window [app_id="dragon"] sticky enable

# Default wallpaper
output * bg #1a1a1a solid_color

# Behavior
focus_follows_mouse yes

#
# Controls --------------------------------------------
#
input type:pointer {
    accel_profile flat
    pointer_accel 0.75
    scroll_factor 0.5
}

input type:keyboard {
    xkb_layout us
    xkb_options ctrl:nocaps
    repeat_delay 500
    repeat_rate 20
}

input type:touchpad {
    events disabled
    tap disabled
}

# input type:touchpad {
#     dwt enabled
#     events enabled
#     middle_emulation enabled
#     natural_scroll disabled
#     tap enabled
#     scroll_factor 0.5
# }

# Hide cursor when typing, available in v1.5.1+
# seat * hide_cursor when-typing enable

set $swaydir $HOME/.config/sway

# Change "Mod" key to meta-key
set $mod Mod4

# start a terminal
set $term foot
bindsym $mod+Return exec $term

# Wofi
set $menu wofi --gtk-dark
bindsym $mod+d exec $menu

# Screenshotting
bindsym Print exec $swaydir/screenshot.sh
bindsym $mod+Print exec $swaydir/picker.sh

# Numero sign
bindsym Alt+Shift+3 exec wl-copy "№"

# Parapgraph sign
bindsym Alt+Shift+4 exec wl-copy "§"

# *-or-equal
bindsym Alt+Shift+0 exec wl-copy "≥"

# blah
bindsym Alt+Shift+9 exec wl-copy "≤"

# Scratchpad
bindsym $mod+Ctrl+minus move scratchpad
bindsym $mod+Ctrl+equal scratchpad show

# HJKL
set $up k
set $down j
set $left h
set $right l

# Mouse+Meta to drag floating windows
floating_modifier $mod normal

# kill focused window
bindsym $mod+Ctrl+q kill

# WLAN on/off
bindsym XF86WLAN exec $swaydir/wlan.sh

# Brightness, in-built display
set $light_up $(light -s sysfs/backlight/intel_backlight -U 1 | light -s sysfs/backlight/intel_backlight -G | cut -d'.' -f1)
set $light_down $(light -s sysfs/backlight/intel_backlight -A 1 | light -s sysfs/backlight/intel_backlight -G | cut -d'.' -f1)
set $light_level $(light -s sysfs/backlight/intel_backlight -G | cut -d'.' -f1)
bindsym XF86MonBrightnessDown exec notify-send -c "hardware" -t 2000 -u low -h "int:value:$light_up" "Laptop: $light_level"
bindsym XF86MonBrightnessUp exec notify-send -c "hardware" -t 2000 -u low -h "int:value:$light_down" "Laptop: $light_level"

# All displays on/off switch (Fn+F7)
bindsym XF86Display exec $swaydir/backlight.sh

# Brightness, external display via i2c
set $ext_light_level $(ddcutil getvcp 10 | grep -o -P '\d*,' | grep -Eo '[0-9]' | tr -d '\n')
set $ext_light_up $(ddcutil setvcp 10 + 5; echo $ext_light_level)
set $ext_light_down $(ddcutil setvcp 10 - 5; echo $ext_light_level)
bindsym $mod+Ctrl+F5 exec notify-send -c "hardware" -t 2000 -u low -h "int:value:$ext_light_down" "Monitor: $ext_light_level"
bindsym $mod+Ctrl+F6 exec notify-send -c "hardware" -t 2000 -u low -h "int:value:$ext_light_up" "Monitor: $ext_light_level"

#
# ALSA
#

# Output chooser
bindsym XF86Favorites exec $swaydir/alsaswitcher.sh

# Out
set $volume_up $(amixer -q set Master 1%+ unmute && amixer sget Master | grep 'Playback' | awk -F'[][]' '{ print substr($2, 0, length($2)-1) }' | sed 's/[^0-9]*//g' | xargs)
set $volume_down $(amixer -q set Master 1%- unmute && amixer sget Master | grep 'Playback' | awk -F'[][]' '{ print substr($2, 0, length($2)-1) }' | sed 's/[^0-9]*//g' | xargs)
set $volume_level $(amixer sget Master | grep 'Playback' | awk -F'[][]' '{ print substr($2, 0, length($2)-1) }' | sed 's/[^0-9]*//g' | tail -1 | xargs)
set $pcm_led_mute $(light -s sysfs/leds/platform::mute -S 100)
set $pcm_led_unmute $(light -s sysfs/leds/platform::mute -S 0)

bindsym XF86AudioRaiseVolume exec notify-send -c "hardware" -t 2000 -u low -h "int:value:$volume_up" "Master: $volume_level" && $pcm_led_unmute
bindsym XF86AudioLowerVolume exec notify-send -c "hardware" -t 2000 -u low -h "int:value:$volume_down" "Master: $volume_level"

bindsym XF86AudioMute exec (amixer get Master | grep off > /dev/null && amixer -q set Master unmute && notify-send -c "hardware" -t 2000 -u low -h "int:value:$volume_level" "Master: $volume_level" && $pcm_led_unmute) || (amixer -q set Master mute && notify-send -c "hardware" -t 2000 -u low -h "int:value:0" "Master muted" && $pcm_led_mute)

# In
set $mic_card $(arecord -l | grep "HDA Digital" | cut -d":" -f1 | sed 's/[^0-9]*//g')
set $mic_lvl_left $(amixer -c$mic_card sget Capture | grep 'Capture' | awk -F'[][]' '{ print substr($2, 0, length($2)-1)}' | sed 's/[^0-9]*//g' | xargs | cut -d" " -f1)
set $mic_lvl_right $(amixer -c$mic_card sget Capture | grep 'Capture' | awk -F'[][]' '{ print substr($2, 0, length($2)-1)}' | sed 's/[^0-9]*//g' | xargs | cut -d" " -f2)
set $mic_lvl_min $(( $mic_lvl_left < $mic_lvl_right ? $mic_lvl_left : $mic_lvl_right ))
set $mic_mute $(amixer -q -c$mic_card set Capture 0% && amixer -q -c$mic_card set 'Mic Boost' 0% && amixer -q -c$mic_card set 'Digital' 0% && amixer -q -c$mic_card set 'Mic Boost' 0% && notify-send -c "hardware" -t 2000 -u low -h "int:value:0" "Microphone muted")
set $mic_unmute $(amixer -q -c$mic_card set Capture 100% && amixer -q -c$mic_card set 'Mic Boost' 100% && amixer -q -c$mic_card set 'Digital' 100% && amixer -q -c$mic_card set 'Mic Boost' 100% && notify-send -c "hardware" -t 2000 -u low -h "int:value:$mic_lvl_min" "Microphone: $mic_lvl_min")
set $mic_led_mute $(light -s sysfs/leds/platform::micmute -S 100)
set $mic_led_unmute $(light -s sysfs/leds/platform::micmute -S 0)
set $mic_toggle $(amixer -q -c$mic_card set 'Capture' toggle)

bindsym XF86AudioMicMute exec (amixer get -c$mic_card Capture | grep -E "\[0%" > /dev/null && $mic_unmute && $mic_led_unmute && $mic_toggle) || ($mic_mute && $mic_led_mute && $mic_toggle)

#
# Windows
#

# Windows list
# bindsym Alt+Tab exec $swaydir/windows.sh

# Mako
bindsym $mod+Escape exec makoctl dismiss
bindsym $mod+Alt+Escape exec makoctl dismiss --all

#
# Workspace wrangling ---------------------------------
#

# Rename workspaces
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws0 "0"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws0

# move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9
bindsym $mod+Ctrl+0 move container to workspace $ws0

# Bind to a monitor like this
# workspace $ws9 output DP-1
# workspace $ws0 output DP-1

#
# Windows wrangling ----------------------------------
#

# Resize, also works with mouse
bindsym $mod+r mode "resize"
mode "resize" {
        bindsym $right          resize shrink width  5 px or 5 ppt
        bindsym $down           resize grow   height 5 px or 5 ppt
        bindsym $up             resize shrink height 5 px or 5 ppt
        bindsym $left           resize grow   width  5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Right           resize shrink width  5 px or 5 ppt
        bindsym Down            resize grow   height 5 px or 5 ppt
        bindsym Up              resize shrink height 5 px or 5 ppt
        bindsym Left            resize grow   width  5 px or 5 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Focus on parent/child
bindsym $mod+F1 focus parent
bindsym $mod+F2 focus child

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move window within workspace
bindsym $mod+Ctrl+$left move left
bindsym $mod+Ctrl+$down move down
bindsym $mod+Ctrl+$up move up
bindsym $mod+Ctrl+$right move right
bindsym $mod+Ctrl+Left move left
bindsym $mod+Ctrl+Down move down
bindsym $mod+Ctrl+Up move up
bindsym $mod+Ctrl+Right move right

# Move window to another screen (monitor)
bindsym $mod+Control+m move window to output up ; focus output up

# Move focus (cursor) to another monitor
# bindsym $mod+Control+Left focus output left
# bindsym $mod+Control+Right focus output right

# This flips between two screens
bindsym $mod+Tab focus output up
bindsym $mod+m focus output down

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# splits
bindsym $mod+minus split vertical ; exec $term
bindsym $mod+backslash split horizontal ; exec $term

# toggle tiling / floating
bindsym $mod+Ctrl+f floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Toggles sticky window
bindsym $mod+Shift+s sticky toggle

# reload the configuration file
bindsym $mod+Shift+c reload

# Check the window
bindsym $mod+question exec '$XDG_CONFIG_HOME/sway/swayprop | xargs -0 notify-send swayprop'

# Exit menu
set $mode_system (L)ock (E)xit (S)uspend (H)ibernate (R)eboot (P)ower-off
mode "$mode_system" {
    bindsym Shift+l exec --no-startup-id swaylock -f -c 000000, mode "default"
    bindsym Shift+e exit
    bindsym Shift+s exec --no-startup-id systemctl suspend, mode "default"
    bindsym Shift+h exec --no-startup-id systemctl hibernate, mode "default"
    bindsym Shift+r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+p exec --no-startup-id systemctl poweroff -i, mode "default"

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym Ctrl+Alt+Delete mode "$mode_system"

# Keep these window roles floating (pop-ups)
for_window [window_role="pop-up"] floating enable
for_window [window_role="TfrmFileOp"] floating enable
for_window [window_role="notification_banner"] floating enable
for_window [title=".*mpv$"] floating enable, focus;

# Waybar
bar {
     swaybar_command waybar
}

# Dim down the power LED
exec_always "light -s 'sysfs/leds/tpacpi::power' -S 0.00 &> /dev/null"

# Gsettings importer
exec_always $XDG_CONFIG_HOME/sway/gsettings.sh

# Disable screen if Sway is restarted with the lid closed
exec_always $XDG_CONFIG_HOME/sway/clamshell.sh

# Notifier
exec mako

# Music daemon
exec mpd

# Clock
exec wlclock --no-input --position center --layer bottom --clock-colour '#333333' --background-colour '#1a1a1a' --border-size 0 --position top-right --margin 50 20 00 0 --size 300 --hand-width 4 &

# Alt-tab
exec sway-alttab

# https://git.archlinux.org/svntogit/community.git/tree/trunk/50-systemd-user.conf?h=packages/sway
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

# Lock screens after 5 minutes of inactivity, turn off after 7 minutes in total.
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 120 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on" && exec sudo light -s sysfs/leds/tpacpi::power -S 0.00' \
#          before-sleep 'swaylock -f -c 000000'
#
